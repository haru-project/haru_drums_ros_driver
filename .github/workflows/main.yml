name: Build and Release for ROS Noetic

on: [push, pull_request]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        container:
          - "ghcr.io/haru-project/haru-generic-noetic:latest"
    container:
      image: ${{ matrix.container }}
      credentials:
        username: ${{ secrets.CR_USERNAME }}
        password: ${{ secrets.CR_TOKEN }}
      env:
        CI_USER: ${{ secrets.CI_USER }}
        CI_TOKEN: ${{ secrets.CI_TOKEN }}
        SSHPASS: ${{ secrets.ROBOTICS_PASSWORD }}
        UPO_SERVER: ${{ secrets.UPO_SERVER }}
        UPO_USER: ${{ secrets.UPO_USER }}
        UPO_PASSWORD: ${{ secrets.ROBOTICS_PASSWORD }}
        UPO_KEY: ${{ secrets.UPO_KEY }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TOKEN }}
      RELEASE: false

    defaults:
      run:
        working-directory: /catkin_ws/
        shell: bash -leo pipefail {0}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/checkout@v2
        with:
          repository: haru-project/action-build-ros-package
          token: ${{ secrets.CI_TOKEN }}
          path: .github/actions/action-build-ros-package
      
      - name: Set Release or Not
        id: release_or_not
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' 
        run: |
          echo "RELEASE=true" >> $GITHUB_ENV
          echo "DISTRO=$(lsb_release -c -s)" >> $GITHUB_ENV
      
      - name: "Clone, test, build and publish ROS package artifacts"
        uses: ./.github/actions/action-build-ros-package
        id: action-build-ros-package
        with:
          build: true
          test: false
          release: ${{ env.RELEASE }}
          check-install: false
          notify: true

      - name: Get Release Info
        if: env.RELEASE == 'true'
        id: release_info
        shell: bash
        working-directory: /catkin_ws/
        run: |
          cd src/target_pkg
          echo "::set-output name=version::$(catkin_package_version)"
          catkin_generate_changelog -ya --skip-contributors --skip-merges --print-root > /catkin_ws/changelog.rst

      - name: Create Release
        if: env.RELEASE == 'true'
        id: create_release
        uses: actions/create-release@v1 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.release_info.outputs.version }}
          release_name: Release ${{ steps.release_info.outputs.version }}
          body_path: /catkin_ws/changelog.rst
          draft: false
          prerelease: false
     
